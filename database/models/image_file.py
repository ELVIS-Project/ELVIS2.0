"""Define an ImageFile model"""
from django.contrib.postgres.fields import ArrayField
from django.db import models

from database.models.file import File


class ImageFile(File):
    """A manifestation of a SourceInstantiation as an digital image file.

    Manifests one and only one SourceInstantiation.

    Generated by an Encoder and validated against a SourceInstantiation by a
    Validator.

    Attributes
    ----------
    ImageFile.file_type : models.CharField
        The format of this ImageFile

    ImageFile.file_size : models.PositiveIntegerField
        The size of the this ImageFile in bytes

    ImageFile.version : models.CharField
        The version of the encoding schema of this ImageFile

    ImageFile.encoding_date : models.DateTimeField
        The date this ImageFile was encoded

    ImageFile.encoded_with : models.ForeignKey
        A reference to the Encoder of this ImageFile

    ImageFile.validated_by : models.ForeignKey
        A reference to the Validator of this ImageFile

    ImageFile.extra_metadata : django.contrib.postgres.fields.JSONField
        Any extra metadata associated with this ImageFile

    ImageFile.manifests : ForeignKey
        The SourceInstantiation manifested by this ImageFile

    ImageFile.files : models.FileField
        The path to the actual files stored on disk

    See Also
    --------
    database.models.File : The super class of ImageFile
    database.models.CustomBaseModel
    database.models.SourceInstantiation
    database.models.Encoder
    database.models.Validator
    """
    manifests = models.ForeignKey('SourceInstantiation',
                                  related_name='manifested_by_image_files',
                                  on_delete=models.CASCADE,
                                  null=False,
                                  help_text='The SourceInstantiation '
                                            'manifested by these images')

    files = ArrayField(models.ImageField(upload_to='images/'),
                       null=False,
                       blank=False,
                       help_text='The actual set of image files')

    class Meta:
        db_table = 'image_file'

    def __str__(self):
        return "Images of {0}".format(self.manifests)

    @property
    def pages(self) -> int:
        """Gets the number of images, which is equal to the number of pages"""
        return self.files.__len__()
