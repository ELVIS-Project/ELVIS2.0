# Generated by Django 2.0.8 on 2019-03-14 18:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0004_auto_20181122_1653'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeatureFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='The date this entry was created')),
                ('date_updated', models.DateTimeField(auto_now=True, help_text='The date this entry was updated')),
                ('file_type', models.CharField(help_text='The format of the File', max_length=10)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='The size of the File in bytes', null=True)),
                ('file', models.FileField(help_text='The actual file', upload_to='feature_files/')),
                ('extracted_with', models.ForeignKey(help_text='The Software used to extractthese features', on_delete=django.db.models.deletion.PROTECT, related_name='feature_files', to='database.Software')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='featuretype',
            name='software',
            field=models.ForeignKey(default='', help_text='The software that defines this feature type', on_delete=django.db.models.deletion.PROTECT, to='database.Software'),
        ),
        migrations.AlterField(
            model_name='audiofile',
            name='encoded_with',
            field=models.ForeignKey(blank=True, help_text='The Encoder of this File', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Encoder'),
        ),
        migrations.AlterField(
            model_name='audiofile',
            name='version',
            field=models.CharField(blank=True, help_text='The version of the encoding schema (i.e. MEI 2.0)', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='imagefile',
            name='encoded_with',
            field=models.ForeignKey(blank=True, help_text='The Encoder of this File', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Encoder'),
        ),
        migrations.AlterField(
            model_name='imagefile',
            name='version',
            field=models.CharField(blank=True, help_text='The version of the encoding schema (i.e. MEI 2.0)', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='symbolicmusicfile',
            name='encoded_with',
            field=models.ForeignKey(blank=True, help_text='The Encoder of this File', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Encoder'),
        ),
        migrations.AlterField(
            model_name='symbolicmusicfile',
            name='version',
            field=models.CharField(blank=True, help_text='The version of the encoding schema (i.e. MEI 2.0)', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='textfile',
            name='encoded_with',
            field=models.ForeignKey(blank=True, help_text='The Encoder of this File', null=True, on_delete=django.db.models.deletion.PROTECT, to='database.Encoder'),
        ),
        migrations.AlterField(
            model_name='textfile',
            name='version',
            field=models.CharField(blank=True, help_text='The version of the encoding schema (i.e. MEI 2.0)', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='featurefile',
            name='symbolic_music_file',
            field=models.ForeignKey(help_text='The Symbolic Music File that the features were extracted from', on_delete=django.db.models.deletion.CASCADE, related_name='feature_files', to='database.SymbolicMusicFile'),
        ),
        migrations.AddField(
            model_name='extractedfeature',
            name='feature_files',
            field=models.ManyToManyField(help_text='The Feature Files that contain this feature', related_name='features', to='database.FeatureFile'),
        ),
    ]
